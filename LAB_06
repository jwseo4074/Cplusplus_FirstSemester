#include <iostream>
using namespace std;

class MyString	{
    int size = 0;
    char* str = NULL;
public:
    MyString() {}
    MyString(const MyString& ms)               //복사 생성자 !!
        :size(ms.size),str(new char[ms.size]) 
    /*   const 멤버는 반드시 멤버 이니셜라이져 
        ex) const string name;    ->    name(_name)
       멤버 객체는 반드시 멤버 이니셜라이져  
       ex) vector <Student*> students;    ->      students(size)
       reference 멤버는 반드시 멤버 이니셜라이져   
       ex) const School& school;      -> school(_school)     */	
    {
        //size = ms.size;
        //str = new char[ms.size];
        for (int i = 0; i < size; i++)
            str[i] = ms.str[i];
    }
    MyString(const char* str123)		{
        str = new char[strlen(str123)];
        size = strlen(str123);
        for (int i = 0; i < size; i++)
            str[i] = str123[i];
    }
    void set(const char* str456)		{
        str = new char[strlen(str456)];
        size = strlen(str456);
        for (int i = 0; i < size; i++)
            str[i] = str456[i];
    }
    void print() const	{
        for (int i = 0; i < size; i++)
            cout << str[i];
        cout << endl;
    }
    



	string getstr() const	{
        return str;
    }
    bool isEqual(const MyString& target1) const	{
        /*if (target1.getstr() == this->str) return 1;
        else return 0;              ==> 이렇게 하면 안됨 ! */
        for (int i = 0; i < size; i++)	{
            if (str[i] == target1.str[i])
                return 1;
        }
        return 0;
    }
    ~MyString()
    {}
};
int main()	{

    MyString strs[] =	{
        MyString("C"),
        MyString(),
        MyString("Java")
    };
    strs[1].set("C++");\
    const MyString target("Java");
    for (int i = 0; i < 3; i++)	{
        const MyString str(strs[i]);
        if (str.isEqual(target))	{
            cout << "[" << i << "]: ";
            str.print();
            break;
        }
    }

    for (int i = 0; i < 3; i++)	{
        const MyString& str = strs[i];
        str.print();
    }
}
